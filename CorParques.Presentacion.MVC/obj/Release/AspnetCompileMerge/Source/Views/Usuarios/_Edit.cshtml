@model CorParques.Negocio.Entidades.Usuario

@*<link href="~/Vendors/switchery/dist/switchery.min.css" rel="stylesheet">
    <link href="~/Vendors/iCheck/skins/flat/blue.css" rel="stylesheet">*@
@{
    var lista = ViewBag.lista as IEnumerable<CorParques.Negocio.Entidades.TipoGeneral>;
    var listaPunto = ViewBag.listaPunto as IEnumerable<CorParques.Negocio.Entidades.Puntos>;
    var listaEstado = ViewBag.Estados as IEnumerable<CorParques.Negocio.Entidades.TipoGeneral>;
    var listaTipoPunto = ViewBag.ListaTipoPunto as IEnumerable<CorParques.Negocio.Entidades.TipoGeneral>;
}
<link href="~/Content/Ubicaciones.css" rel="stylesheet" />

<form>
    <div class="form-horizontal form-label-left">
        <div class="item form-group col-md-10 col-sm-10 col-xs-12">
            <label class="control-label col-md-2 col-sm-2 col-xs-12" for="Nombre">
                Empleado <span>*</span>
            </label>
            <div class="col-md-10 col-sm-10 col-xs-12">
                <select id="ddlEmpleado" class="form-control required setSelect2" disabled>
                    <option value="">Seleccione...</option>
                    @foreach (var item in ViewBag.listaEmpleados)
                    {
                        @*EDSP 11/11/2017*@
                        //<option value="@item.Texto" data-id="@item.IdEstructuraEmpleado" @(item.Texto.Contains($"{Model.Nombre} {Model.Apellido}")|| Model.NombreUsuario.Contains(item.Texto.Split(' ')[0]) ?"selected='selected'":"" )>@item.Texto</option>
                        <option value="@item.Texto"  data-cargo="@item.CodigoSapCargo" @(item.IdEstructuraEmpleado == Model.IdEstructuraEmpleado ? "selected='selected'" : "" )>@item.Texto</option>
                    }
                </select>
            </div>
            <input type="hidden" name="IdEmpleado" id="IdEmpleado" value="" />
            <input type="hidden" name="Nombre" id="Nombre" value="@Model.Nombre" />
            <input type="hidden" name="Apellido" id="Apellido" value="@Model.Apellido" />
        </div>
        @*<div class="item form-group col-md-6 col-sm-6 col-xs-12">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Nombre">
                Nombre <span>*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control col-md-7 col-xs-12 required", maxlength = 100 })
            </div>
        </div>

        <div class="item form-group col-md-6 col-sm-6 col-xs-12">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Nombre">
                Apellido <span>*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Apellido, new { @class = "form-control col-md-7 col-xs-12 required", maxlength = 100 })
            </div>
        </div>*@

        <div class="item form-group col-md-6 col-sm-6 col-xs-12">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Nombre">
                Estado <span>*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.IdEstado, new SelectList(listaEstado, "Id", "Nombre"), new { @class = "form-control col-md-7 col-xs-12" })
            </div>
        </div>

        <div class="item form-group col-md-6 col-sm-6 col-xs-12">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Nombre">
                Correo
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Correo, new { @class = "form-control col-md-7 col-xs-12 email", maxlength = 50 })
            </div>
        </div>
        <div class="item form-group col-md-6 col-sm-6 col-xs-12">
            <label class="control-label col-md-5 col-sm-5 col-xs-12" for="email">
                Sitio administración
            </label>
            <div class="col-md-2 col-sm-2 col-xs-12 checkbox check-box chk">
                @*@Html.CheckBox("chbx", new { @class = "required" })*@
                <label style="font-size: 1.5em">
                    <input type="checkbox" value="" checked id="chbx">
                    <span class="cr cr2"><i class="cr-icon fa fa-check"></i></span>
                </label>
            </div>
        </div>
        <div class="item form-group col-md-6 col-sm-6 col-xs-12">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="NombreUsuario">
                Usuario <span>*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.NombreUsuario, new { @class = "form-control col-md-7 col-xs-12 required", @readonly = true, maxlength = 50 })
            </div>
        </div>

        @*<div class="item form-group col-md-6 col-sm-6 col-xs-12" id="grpPassword">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Password">
                Password <span>*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control col-md-7 col-xs-12 ", maxlength = 200 })
            </div>
        </div>*@
        <div class="row" col-md-12 col-sm-12 col-xs-12">


            <div class="item col-md-12 col-sm-12 col-xs-12">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Password">
                    Puntos<span>*</span>
                </label>
                <div class="col-md-9 col-sm-9 col-xs-12" style="height:200px; width:420px; overflow-y:auto;">
                    <div class="checkbox treeview">
                        <br />

                        <ul>
                            @foreach (var item in listaTipoPunto)
                            {
                                <li>

                                    <a href="javascript:void(0);" class="plus-treeview"><i class="fa fa-plus-square"></i></a>
                                    <a href="javascript:void(0);" class="minus-treeview"><i class="fa fa-minus-square"></i></a>

                                    <input class="nivel1" name="chkPuntos" type="checkbox" value="0" />@item.Nombre

                                    <ul>
                                        @foreach (var punto in listaPunto.Where(x => x.IdTipoPunto == item.Id))
                                        {
                                            if (Model.ListaPuntos.Count(x => x.Id == punto.Id) > 0)
                                            {
                                                <li>

                                                    <input class="nivel1" name="chkPuntos" type="checkbox" value="@punto.Id" checked="checked"/>@punto.Nombre

                                                </li>
                                            }
                                            else
                                            {
                                                <li>

                                                    <input class="nivel1" name="chkPuntos" type="checkbox" value="@punto.Id" />@punto.Nombre

                                                </li>
                                            }


                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    </div>

                </div>
            </div>


        </div>

        
        @Html.Hidden("hdListaPuntos", string.Join(",", Model.ListaPuntos.Select(x => x.Id).ToArray()))

        @Html.HiddenFor(model => model.Id)

       

    </div>
</form>

<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery-ui.min.autComp.js"></script>
<script src="~/Vendors/jquery.tagsinput/src/jquery.tagsinput.js"></script>




<script>
    $(document).ready(function () {
        var dataperfil=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(lista.Select(x => new { label = x.Nombre, value = x.Id }).ToArray()));
        var dataPuntos=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(listaPunto.Select(x => new { label = x.Nombre, value = x.Id,category = x.TipoPunto }).ToArray()));

        InitPartialCreate(dataperfil,dataPuntos);
        asignarSelect2();
        AsignarEventoEmpleado();
    });
</script>
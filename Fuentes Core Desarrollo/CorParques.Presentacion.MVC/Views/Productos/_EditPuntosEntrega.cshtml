@model CorParques.Negocio.Entidades.Producto

<link href="~/Vendors/dropzone/dist/min/dropzone.min.css" rel="stylesheet" />
<link href="~/Vendors/switchery/dist/switchery.min.css" rel="stylesheet">

<form id="frmCreate">
    <div class="form-horizontal form-label-left" style="height:400px; overflow-y:auto; overflow-x: hidden ">
        @Html.HiddenFor(model => model.IdProducto)





        <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                Nombre
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control col-md-7 col-xs-12", maxlength = 500, @readonly = true })
            </div>
        </div>


        <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12">
                Tipo producto
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.TipoProducto, new { @class = "form-control col-md-7 col-xs-12", maxlength = 500, @readonly = true })
            </div>
        </div>


        <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                Codigo SAP
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.CodigoSap, new { @class = "form-control col-md-7 col-xs-12", @readonly = true, maxlength = 50 })
            </div>
        </div>

        <div class="item form-group">

            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="Puntos">
                Puntos <span>*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <input id="puntosAutocomplete" type="text" class="form-control" />
                <input id="tagsPuntos" type="text" class="tags form-control " />

            </div>
        </div>


        @Html.HiddenFor(model =>model.hdListPuntos)

    </div>
</form>

<script>

    @*var IdPuntos =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.IdPuntos).ToString()));
    var NamePuntos=@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.NombrePuntos).ToString()));
    InitPartialCreate(IdPuntos, NamePuntos);*@
</script>
@{
    //var listapuntos = (IEnumerable<CorParques.Negocio.Entidades.Puntos>)ViewBag.ListaPuntos;
    //var dataPuntosParcial = Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(listapuntos.Select(x => new{label = x.Nombre,value = x.Id,category = x.TipoPunto}).ToArray()));
}
@{
    var listaIdpuntos = Model.IdPuntos;
    var listaNobrepuntos = Model.NombrePuntos;
    if (listaIdpuntos == null){listaIdpuntos = ""; }
    if (listaNobrepuntos == null) { listaNobrepuntos = ""; }

    }
<register-block dynamic-section="scripts" key="my-component">
    <script>
  $(function () {
        var dataPuntosIdSeleccionados =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(listaIdpuntos.ToString()));
      var dataPuntosNomSeleccionados =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(listaNobrepuntos.ToString()));
      $("#tagsPuntos").importTags(dataPuntosNomSeleccionados);
      $("#hdListPuntos").val(dataPuntosIdSeleccionados);
      InitPartialCreate(1);
    
  
         });</script>

</register-block>



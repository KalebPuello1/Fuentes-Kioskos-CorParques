@model CorParques.Negocio.Entidades.AuxiliarPunto

@if (Model.IdEstructuraEmpleado > 0)
{

    if (Model.ListaUbicacionesPunto != null)
    {
        
    <form>
        <div class="form-horizontal form-label-left">
            @Html.HiddenFor(model => model.IdEstructuraEmpleado)
            @Html.HiddenFor(model => model.Certificado)            
            <div class="item form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                    Nombre
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(model => model.NombreEmpleado, new { @class = "form-control col-md-7 col-xs-12 required", @readonly = true })
                </div>
            </div>
            <div class="item form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="email">
                    Ubicación <span>*</span>
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(model => model.IdUbicacionPunto, new SelectList(Model.ListaUbicacionesPunto, "Id", "Nombre"), "Seleccione...", new { @class = "form-control required" })
                </div>
            </div>
            <div class="item form-group">
                <label class="control-label col-md-3 col-sm-3 col-xs-12" for="email">
                    Certificado
                </label>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.CheckBoxFor(model => model.Certificado, new { disabled = "disabled" })
                </div>
            </div>
        </div>
    </form>

    }
    else
    {
        <script>
        @Html.Raw("setTimeout(function () { cerrarModal('modalCRUD');}, 100);");
        @Html.Raw("MensajeNoHayUbicaciones();");
        </script>
    }
}
else
{
    <script>
        @Html.Raw("setTimeout(function () { cerrarModal('modalCRUD');}, 100);");
        @Html.Raw("EmpleadoNoEncontrado();");
    </script>
}